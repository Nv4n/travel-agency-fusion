
 openapi: 3.0.0
 /api/users/register:
   post:
     summary: Register a new user
     tags:
        - User
     produces:
       - application/json
     parameters:
       - name: body
         in: body
         description: User registration data
         required: true
         schema:
           type: object
           properties:
             email:
               type: string
             fname:
               type: string
             lname:
               type: string
             password:
               type: string
     responses:
       '201':
         description: User successfully registered
       '400':
         description: Invalid data format or email already in use
       '500':
         description: Internal server error

 /api/users/login:
   post:
     summary: User login
     tags:
        - User
     description: Endpoint for user login
     requestBody:
       required: true
       content:
         application/json:
           schema:
             type: object
             properties:
               email:
                 type: string
               password:
                 type: string
     responses:
       '200':
         description: Successful login
         content:
           application/json:
             schema:
               type: object
               properties:
                 accessToken:
                   type: string
       '400':
         description: Invalid data format
         content:
           application/json:
             schema:
               type: object
               properties:
                 error:
                   type: string
       '403':
         description: Invalid login credentials
         content:
           application/json:
             schema:
               type: object
               properties:
                 error:
                   type: string
       '404':
         description: User not found
         content:
           application/json:
             schema:
               type: object
               properties:
                 error:
                   type: string
       '500':
         description: Internal server error
 /api/users/logout:
    delete:
     summary: Logout the user
     description: Logout the user and clear the JWT cookie.
     tags:
       - User
     responses:
       '200':
          description: OK

 /api/users/refresh-token:
   get:
     summary: Refresh access token
     responses:
       '200':
         description: Successful response
         content:
           application/json:
             schema:
               type: object
               properties:
                 data:
                   type: object
                   properties:
                     accessToken:
                       type: string
       '401':
         description: Unauthorized
         content:
           application/json:
             schema:
               type: object
               properties:
                 redirect:
                   type: string
     tags:
       - User

 /api/users/name:
   get:
     summary: Get user's full name
     description: Returns the full name of the authenticated user.
     tags:
      - User
     security:
       - BearerAuth: []
     responses:
       '200':
         description: Successful operation
         content:
           application/json:
             schema:
               type: object
               properties:
                 data:
                   type: object
                   properties:
                     name:
                       type: string
       '400':
         description: Bad access token
         content:
           application/json:
             schema:
               type: object
               properties:
                 error:
                   type: string
       '403':
         description: Not authorized
         content:
           application/json:
             schema:
               type: object
               properties:
                 error:
                   type: string
       '404':
         description: User not found
         content:
           application/json:
             schema:
               type: object
               properties:
                 error:
                   type: string
 securitySchemes:
   BearerAuth:
     type: http
     scheme: bearer
     bearerFormat: JWT